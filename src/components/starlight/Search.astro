---
import '@docsearch/css';
import { getDocSearchStrings } from '~/i18n/util';
---

<div id="docsearch" data-translations={JSON.stringify(getDocSearchStrings(Astro))}></div>

<script>
	import docsearch from '@docsearch/js';

	// @ts-expect-error todo: add proper type casting
	const translations = JSON.parse(document.querySelector('#docsearch').dataset.translations);

	docsearch({
		container: '#docsearch',
		appId: '7AFBU8EPJU',
		indexName: 'astro',
		apiKey: '4440670147c44d744fd8da35ff652518',
		searchParameters: { facetFilters: [[`lang:${location.pathname.split('/')[1]}`]] },
		insights: true,
		getMissingResultsUrl: ({ query }: { query: string }) =>
			`https://github.com/withastro/docs/issues/new?title=Missing+results+for+query+%22${encodeURIComponent(
				query
			)}%22`,
		transformItems: (items) => {
			return items.map((item) => {
				// We transform the absolute URL into a relative URL to
				// work better on localhost, preview URLS.
				const url = new URL(item.url);
				if (url.hash === '#overview') url.hash = '';
				return {
					...item,
					url: url.href.replace(url.origin, ''),
				};
			});
		},
		placeholder: translations.placeholder,
		translations: translations,
	});
</script>

<style>
	div {
		display: contents;
	}

	div[data-open-modal] {
		width: 100%;
	}

	@media (min-width: 50rem) {
		:global(.DocSearch-Button) {
			width: 100%;
			max-width: 22rem;
		}
	}
</style>
