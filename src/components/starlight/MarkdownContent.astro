---
import type { Props } from '@astrojs/starlight/props'
import BackendGuidesNav from '../BackendGuidesNav.astro'
import CMSGuidesNav from '../CMSGuidesNav.astro'
import DeployGuidesNav from '../DeployGuidesNav.astro'
import IntegrationsNav from '../IntegrationsNav.astro'
import MigrationGuidesNav from '../MigrationGuidesNav.astro'
import { useTranslations } from '~/i18n/util'

const t = useTranslations(Astro)

const { entry } = Astro.props
---

<div class="content">
  <slot />

  {
    entry.data.type === 'backend' && (
      <h2>{t('backend.navTitle')}</h2>
      <BackendGuidesNav minimal={true}/>
    )
  }
  {
    entry.data.type === 'cms' && (
      <h2>{t('cms.navTitle')}</h2>
      <CMSGuidesNav minimal={true}/>
    )
  }
  {
    entry.data.type === 'deploy' && (
      // <h2>{t('deploy.sectionTitle')}</h2>
      <DeployGuidesNav minimal={true}/>
    )
  }
  {
    entry.data.type === 'integration' && (
      <h2>{t('integrations.others')}</h2>
      <IntegrationsNav minimal={true}/>
    )
  }
  {
    entry.data.type === 'migration' && (
      <h2>{t('migration.navTitle')}</h2>
      <MigrationGuidesNav minimal={true}/>
    )
  }
</div>

<style>
	.content
		:global(
			:not(a, strong, em, del, span, input, code)
				+ :not(a, strong, em, del, span, input, code, :where(.not-content *))
		) {
		margin-top: 1.5rem;
	}

	/* Headings after non-headings have more spacing. */
	.content
		:global(
			:not(h1, h2, h3, h4, h5, h6) + :is(h1, h2, h3, h4, h5, h6):not(:where(.not-content *))
		) {
		margin-top: 2.5rem;
	}

	.content :global(li + li:not(:where(.not-content *))),
	.content :global(dt + dt:not(:where(.not-content *))),
	.content :global(dt + dd:not(:where(.not-content *))),
	.content :global(dd + dd:not(:where(.not-content *))) {
		margin-top: 0.25rem;
	}

	.content
		:global(
			li > :last-child:not(li, ul, ol):not(a, strong, em, del, span, input, :where(.not-content *))
		) {
		margin-bottom: 1.25rem;
	}

	.content :global(dt:not(:where(.not-content *))) {
		font-weight: 700;
	}
	.content :global(dd:not(:where(.not-content *))) {
		padding-inline-start: 1rem;
	}

	.content :global(:is(h1, h2, h3, h4, h5, h6):not(:where(.not-content *))) {
		color: var(--sl-color-white);
		line-height: var(--sl-line-height-headings);
		font-weight: 600;
	}

	.content :global(:is(img, picture, video, canvas, svg, iframe):not(:where(.not-content *))) {
		display: block;
		max-width: 100%;
		height: auto;
	}

	.content :global(h1:not(:where(.not-content *))) {
		font-size: var(--sl-text-h1);
	}
	.content :global(h2:not(:where(.not-content *))) {
		font-size: var(--sl-text-h2);
	}
	.content :global(h3:not(:where(.not-content *))) {
		font-size: var(--sl-text-h3);
	}
	.content :global(h4:not(:where(.not-content *))) {
		font-size: var(--sl-text-h4);
	}
	.content :global(h5:not(:where(.not-content *))) {
		font-size: var(--sl-text-h5);
	}
	.content :global(h6:not(:where(.not-content *))) {
		font-size: var(--sl-text-h6);
	}

	.content :global(a:not(:where(.not-content *))) {
		color: var(--sl-color-text-accent);
	}
	.content :global(a:hover:not(:where(.not-content *))) {
		color: var(--sl-color-white);
	}

	.content :global(code:not(:where(.not-content *))) {
		background-color: var(--sl-color-bg-inline-code);
		margin-block: -0.125rem;
		padding: 0.125rem 0.375rem;
		font-size: var(--sl-text-code-sm);
	}
	.content :global(:is(h1, h2, h3, h4, h5, h6) code) {
		font-size: inherit;
	}

	.content :global(pre:not(:where(.not-content *))) {
		border: 1px solid var(--sl-color-gray-5);
		padding: 0.75rem 1rem;
		font-size: var(--sl-text-code);
		tab-size: 2;
	}

	.content :global(pre code:not(:where(.not-content *))) {
		all: unset;
		font-family: var(--__sl-font-mono);
	}

	.content :global(blockquote:not(:where(.not-content *))) {
		border-inline-start: 1px solid var(--sl-color-gray-5);
		padding-inline-start: 1rem;
	}

	.content :global(table:not(:where(.not-content *))) {
		display: block;
		overflow: auto;
		border-collapse: collapse;
	}
	.content :global(tr:nth-child(2n):not(:where(.not-content *))) {
		background-color: var(--sl-color-gray-7, var(--sl-color-gray-6));
	}
	.content :global(:is(th, td):not(:where(.not-content *))) {
		border: 1px solid var(--sl-color-hairline-light);
		padding: 0.375rem 0.8125rem;
	}

	.content :global(hr:not(:where(.not-content *))) {
		border: 0;
		border-bottom: 1px solid var(--sl-color-hairline);
	}

	/* Custom styles for `<details>` element. */
	.content :global(details) {
		border-bottom: 1px solid var(--sl-color-gray-5);
		padding: 0.75rem 1rem;
	}

	.content :global(details + details) {
		margin-top: 0;
	}

	.content :global(summary) {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin: -0.75rem -1rem;
		border: 1px solid transparent;
		padding: 0.75rem 1rem;
		cursor: pointer;
		color: var(--sl-color-white);
	}
	.content :global(summary::marker),
	.content :global(summary::-webkit-details-marker) {
		display: none;
	}
	.content :global(summary::after) {
		content: '';
		width: 1.5rem;
		height: 1.5rem;
		-webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24'%3E%3Cpath d='m14.83 11.29-4.24-4.24a1 1 0 1 0-1.42 1.41L12.71 12l-3.54 3.54a1 1 0 0 0 0 1.41 1 1 0 0 0 .71.29 1 1 0 0 0 .71-.29l4.24-4.24a1.002 1.002 0 0 0 0-1.42Z'%3E%3C/path%3E%3C/svg%3E");
		-webkit-mask-size: 100%;
		mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24'%3E%3Cpath d='m14.83 11.29-4.24-4.24a1 1 0 1 0-1.42 1.41L12.71 12l-3.54 3.54a1 1 0 0 0 0 1.41 1 1 0 0 0 .71.29 1 1 0 0 0 .71-.29l4.24-4.24a1.002 1.002 0 0 0 0-1.42Z'%3E%3C/path%3E%3C/svg%3E");
		mask-size: 100%;
		background-color: currentColor;
		transition: transform 0.2s ease-in-out;
	}
	.content :global([open] > summary) {
		border-color: var(--sl-color-gray-5);
		background-color: var(--sl-color-gray-6);
	}
	.content :global([open] > summary::after) {
		transform: rotate(90deg);
	}

	.content :global(details + details > summary) {
		border-top: 0;
	}
</style>
