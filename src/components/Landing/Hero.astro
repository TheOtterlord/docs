---
import { Image } from 'astro:assets';

type Contributor = {
	avatar_url: string;
};

const res = await fetch('https://astro.badg.es/api/v1/top-contributors.json');
const allContributors: Contributor[] = (await res.json()).data;

const arrangement = [3, 4, 3, 3, 6, 4, 6, 3, 3, 3];
const circles = [1, 0, 2, 2, -1, 2, -1, -1, 3, -1];
const spaces = [-1, -1, -1, 1, -1, -1, -1, -1, -1];

const contributorArrangement = arrangement.map((i) => allContributors.splice(0, i));
---

<div class="hero">
	<div class="grid"></div>
	<div class="landing-content">
		<div class="hero-content">
			<slot name="hero-content" />
		</div>
	</div>
	<div class="hero-facepile-mobile">
		<slot name="hero-facepile" />
	</div>
	<div class="hero-facepile not-content">
		{
			contributorArrangement.map((contributors: (Contributor | number)[], i) => {
				if (circles[i] !== -1) contributors.splice(circles[i], 0, 1);
				if (spaces[i] !== -1) contributors.splice(spaces[i], 0, 2);
				return (
					<div>
						{i === 7 && <slot name="hero-facepile" />}
						{contributors.map((c) =>
							typeof c === 'number' ? (
								<span class={`${c === 1 ? 'circle' : 'space'}`} />
							) : (
								<Image
									width="120"
									height="120"
									quality="low"
									loading="lazy"
									src={c.avatar_url!}
									alt=""
								/>
							)
						)}
					</div>
				);
			})
		}
	</div>
</div>

<style is:global>
	.hero {
		position: relative;
		width: 100%;
	}

	.landing-content {
		max-width: 72rem;
		margin: auto;
		padding: 0 2rem;
	}

	.landing-content .card-split {
		display: flex;
		gap: 2rem;
		color: var(--sl-color-white);
		margin-top: 1rem;
	}
	.landing-content .card-split > div {
		flex: 1;
	}

	.grid {
		z-index: -1;
		position: absolute;
		content: '';
		inset: 0;
		background-image: linear-gradient(to right, var(--sl-color-gray-6) 1px, transparent 1px),
			linear-gradient(to bottom, var(--sl-color-gray-6) 1px, transparent 1px);
		background-position: top center;
		background-size: 20px 20px;
		-webkit-mask-image: radial-gradient(circle at 100%, white, transparent 80%);
		mask-image: radial-gradient(circle at 100%, white, transparent 80%);
	}

	.hero-content {
		max-width: 36rem;
		padding: 15.5rem 0;
	}

	.hero-content h1 {
		font-size: var(--sl-text-6xl) !important;
	}

	.main-pane {
		--sl-content-margin-inline: 0 !important;
		width: 100% !important;
		background:
			radial-gradient(var(--sl-color-purple-low), transparent 40%) no-repeat -60vw -50vh / 105vw
				200vh,
			radial-gradient(var(--sl-color-red-low), transparent 40%) no-repeat 30vw -100vh / 105vw 200vh;
	}

	.main-pane main > div:not(:first-child) {
		padding: 0px;
    border-top: none;
	}

	.main-pane main #_top {
		display: none;
	}

	.main-pane main > div > div {
		max-width: 100%;
	}

	footer {
		display: none !important;
	}

	.hero-facepile {
		position: absolute;
		display: flex;
		flex-direction: column;
		align-items: end;
		top: -2rem;
		right: 0;
	}

	.hero-facepile > div {
		display: flex;
	}

	.hero-facepile img,
	.hero-facepile .circle,
	.hero-facepile .space {
		z-index: -1;
		border-radius: 100%;
		width: 3.75rem;
		height: 3.75rem;
		margin: 0.5rem;
	}

	.hero-facepile .circle {
		border: 1px solid var(--sl-color-gray-4);
		opacity: 0.8;
	}

	.hero-facepile p {
		color: var(--sl-color-white);
		text-align: right;
		max-width: 16rem;
		padding: 0.25rem;
	}

	.landing-content > article {
		background: radial-gradient(var(--sl-color-orange-low), transparent 40%) no-repeat 50% -30% / 200%
			200%;
		position: relative;
	}
	.landing-content > .card-grid > article {
		background: radial-gradient(var(--sl-color-accent-low), transparent 40%) no-repeat 0 100% / 200%
			200%;
		position: relative;
	}
	.landing-content > article::after,
	.landing-content > .card-grid > article::after {
		background: var(--sl-color-black);
		content: '';
		z-index: -1;
		position: absolute;
		inset: 0;
		background: hsla(224, 10%, 10%, 90%);
	}

	:root[data-theme='light'] .landing-content > article::after,
	:root[data-theme='light'] .landing-content > .card-grid > article::after {
		background: hsla(0, 0%, 100%, 90%);
	}

	.landing-content > .card-grid:nth-child(1) > article:first-child {
		background: radial-gradient(hsla(var(--sl-hue-blue), 68%, 52%, 16%), transparent 40%) no-repeat
			0 100% / 200% 200%;
	}
	.landing-content > .card-grid:nth-child(1) > article:last-child {
		background: radial-gradient(hsla(var(--sl-hue-red), 68%, 52%, 16%), transparent 40%) no-repeat 0
			100% / 200% 200%;
	}

	.landing-content > .card-grid:nth-child(3) > article:first-child {
		background: radial-gradient(hsla(var(--sl-hue-red), 68%, 52%, 16%), transparent 40%) no-repeat 0
			100% / 200% 200%;
	}

	.landing-content > .card-grid:nth-child(3) > article:last-child {
		background: radial-gradient(hsla(165, 90%, 46%, 16%), transparent 40%) no-repeat 0 100% / 200%
			200%;
	}

	.card-grid .card:first-child .title svg {
		background-color: var(--sl-color-red-low);
		border-color: var(--sl-color-red-high);
	}

	.card-grid .card:last-child .title svg {
		background-color: var(--sl-color-blue-low);
		border-color: var(--sl-color-blue-high);
	}

	@media screen and (max-width: 78rem) {
		.landing-content .card-split {
			display: block;
		}
		.landing-content .card-split > div:first-child {
			padding-bottom: 1rem;
		}
		.hero > .hero-facepile {
			display: none;
		}
	}

	@media screen and (max-width: 50rem) {
		.landing-content {
			padding: 0 1rem;
		}
	}

	.hero-facepile-mobile {
		display: none;
		padding: 0 1rem;
		text-align: center;
		color: var(--sl-color-white);
	}

	@media screen and (max-width: 32rem) {
		.hero-content {
			padding: 0;
			text-align: center;
		}

		.hero-content div {
			justify-content: center;
		}

		.hero-facepile-mobile {
			display: block;
		}
		.hero-facepile-mobile p {
			margin-top: 2rem;
		}

		.hero > .hero-facepile {
			display: flex;
			padding: 1rem;
			position: inherit;
			max-height: 400px;
			overflow: hidden;
			mask-image: linear-gradient(to bottom, transparent 10%, black, transparent 90%);
			margin-bottom: -5rem;
			margin-top: -1rem;
		}
		.hero {
			margin-bottom: -3rem !important;
		}
	}
</style>
