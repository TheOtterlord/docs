diff --git a/components/RightSidebarPanel.astro b/components/RightSidebarPanel.astro
index 8c79694ffd399af9a01bc595319e4148a312cd7d..8be790df29cc0d8571825ba417dede120733d18c 100644
--- a/components/RightSidebarPanel.astro
+++ b/components/RightSidebarPanel.astro
@@ -1,7 +1,13 @@
+---
+import StarlightBanner from '~/components/StarlightBanner.astro'
+---
+
 <div class="right-sidebar-panel sl-hidden lg:sl-block">
 	<div class="sl-container">
 		<slot />
 	</div>
+
+  <StarlightBanner/>
 </div>
 
 <style>
diff --git a/components/SiteTitle.astro b/components/SiteTitle.astro
index b4cf4c9064d85074f71668da3ef7284c334c5ed2..50ac1105f2642ccb67449c40e2bb38e1a2c4c64c 100644
--- a/components/SiteTitle.astro
+++ b/components/SiteTitle.astro
@@ -23,7 +23,7 @@ if (config.logo) {
 	if (err) throw new Error(err);
 }
 
-const href = pathWithBase(Astro.props.locale || '/');
+const href = pathWithBase((Astro.props.locale || '') + '/getting-started/');
 ---
 
 <a {href} class="site-title sl-flex">
diff --git a/layout/TwoColumnContent.astro b/layout/TwoColumnContent.astro
index a06e91d8a9e21f87300393a0535904055d637740..c4954dfaf7fe2cbb87bbc7e82e72880805e40844 100644
--- a/layout/TwoColumnContent.astro
+++ b/layout/TwoColumnContent.astro
@@ -36,7 +36,6 @@ interface Props {
 			top: 0;
 			border-inline-start: 1px solid var(--sl-color-gray-6);
 			padding-top: var(--sl-nav-height);
-			width: 100%;
 			height: 100vh;
 			overflow-y: auto;
 			scrollbar-width: none;
diff --git a/schema.ts b/schema.ts
index aae1cdd4040dab3aab1675ad2097b2727bb29741..8033c581b0cb7464d632dcf2c29e6425fd8f006a 100644
--- a/schema.ts
+++ b/schema.ts
@@ -26,9 +26,15 @@ type ImageFunction = () => z.ZodObject<{
 	>;
 }>;
 
-export function docsSchema() {
-	return ({ image }: { image: ImageFunction }) =>
-		z.object({
+type AnyZodObject =
+	| z.AnyZodObject
+	| z.ZodUnion<[z.AnyZodObject, ...z.AnyZodObject[]]>
+	| z.ZodDiscriminatedUnion<string, z.AnyZodObject[]>
+	| z.ZodIntersection<z.AnyZodObject, z.AnyZodObject>;
+
+export function docsSchema<S extends AnyZodObject>({ extend }: { extend?: S } = {}) {
+	return ({ image }: { image: ImageFunction }) => {
+		const schema = z.object({
 			/** The title of the current page. Required. */
 			title: z.string(),
 
@@ -166,4 +172,6 @@ export function docsSchema() {
 				})
 				.optional(),
 		});
+    return schema.and(extend || z.object({}));
+  };
 }